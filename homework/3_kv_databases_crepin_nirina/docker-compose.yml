version: '3.8'

services:
  api_games:
    build: ./api_games
    container_name: api_games
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CACHE_TTL_SECONDS=120
    volumes:
      - ./api_games:/app
      - /app/node_modules

  api_clients:
    build: ./api_clients
    container_name: api_clients
    ports:
      - "5001:5001"
    depends_on:
      - mongodb
      - redis
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CACHE_TTL_SECONDS=120
    volumes:
      - ./api_clients:/app   
      - /app/node_modules

  mongodb:
    image: mongo:7
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis:7
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - ./redis_data:/data
    command: ['redis-server', '--save', '60', '1', '--appendonly', 'yes']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redisinsight
    restart: unless-stopped
    ports:
      - 5540:5540
    volumes:
      - ./redisinsight_data:/db
    depends_on:
      redis:
        condition: service_healthy

volumes:
  mongo_data:
  redis_data:
  redisinsight_data:
